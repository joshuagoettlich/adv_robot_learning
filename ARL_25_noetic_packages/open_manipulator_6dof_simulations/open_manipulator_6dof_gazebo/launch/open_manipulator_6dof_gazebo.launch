<launch>
  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="controller" default="position"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find open_manipulator_6dof_gazebo)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
   command="$(find xacro)/xacro --inorder '$(find open_manipulator_6dof_description)/urdf/open_manipulator_6dof.urdf.xacro'" if="$(eval arg('controller') == 'position')"/>

  <param name="robot_description"
   command="$(find xacro)/xacro --inorder '$(find open_manipulator_6dof_description)/urdf/open_manipulator_6dof_torque.urdf.xacro'" if="$(eval arg('controller') == 'torque')"/>


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
     args="-urdf -model open_manipulator_6dof -z 0.0 -param robot_description -x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0 -J joint1 0.0 -J joint2 -0.78 -J joint3 1.5 -J joint4 0.0 joint5 0.8 joint6 0.0"/>

  <!-- ros_control robotis manipulator launch file -->
  <include file="$(find open_manipulator_6dof_gazebo)/launch/open_manipulator_6dof_controller.launch" >
    <arg name="controller" value="$(arg controller)"/>
  </include>
</launch>